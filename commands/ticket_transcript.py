# ticket/ticket_transcript.py
import discord
import os
from datetime import datetime

async def generate_transcript(interaction: discord.Interaction):
    await interaction.response.defer()
    
    try:
        transcript_content = f"# Transcript of {interaction.channel.name}\n\n"
        transcript_content += f"**Channel:** {interaction.channel.mention}\n"
        transcript_content += f"**Created:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} UTC\n\n"
        transcript_content += "---\n\n"
        
        messages = []
        async for message in interaction.channel.history(limit=None, oldest_first=True):
            timestamp = message.created_at.strftime("%Y-%m-%d %H:%M:%S")
            content = message.clean_content if message.clean_content else "*No text content*"
            
            if message.attachments:
                attachments = ", ".join([f"[{att.filename}]({att.url})" for att in message.attachments])
                content += f" **Attachments:** {attachments}"
            
            messages.append(f"**{message.author}** - {timestamp}\n{content}\n")
        
        transcript_content += "\n".join(messages)
        transcript_content += f"\n\n---\n*Transcript generated by {interaction.client.user} at {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} UTC*"
        
        # Save to file
        filename = f"transcript-{interaction.channel.name}.txt"
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(transcript_content)
        
        # Send file
        with open(filename, 'rb') as f:
            await interaction.followup.send(
                "üìã **Transcript Generated**",
                file=discord.File(f, filename)
            )
        
        # Clean up file
        os.remove(filename)
        
    except Exception as e:
        await interaction.followup.send(f"‚ùå Error generating transcript: {str(e)}", ephemeral=True)